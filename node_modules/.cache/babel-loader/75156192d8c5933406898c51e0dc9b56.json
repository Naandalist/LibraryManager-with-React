{"ast":null,"code":"import _defineProperty from \"/home/naandalist/Documents/arkQuick/frontEnd/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  bookData: '',\n  isLoading: false,\n  isRejected: false,\n  isFulfilled: false\n};\nexport const books = {\n  getBooks: (prevState = initialState, action) => {\n    switch (action.type) {\n      case 'GET_BOOKS_PENDING':\n        return _objectSpread({}, prevState, {\n          isFulfilled: false,\n          isRejected: false,\n          isLoading: true\n        });\n\n      case 'GET_BOOKS_REJECTED':\n        return _objectSpread({}, prevState, {\n          isLoading: false,\n          isRejected: true\n        });\n\n      case 'GET_BOOKS_FULFILLED':\n        return _objectSpread({}, prevState, {\n          isLoading: false,\n          isFulfilled: true,\n          bookData: action.payload.data.data\n        });\n\n      default:\n        return prevState;\n    }\n  },\n  getSelectedGenre: (prevState = initialState, action) => {\n    switch (action.type) {\n      case 'GET_GENRES_BOOKS_PENDING':\n        return _objectSpread({}, prevState, {\n          isFulfilled: false,\n          isRejected: false,\n          isLoading: true\n        });\n\n      case 'GET_GENRES_BOOKS_REJECTED':\n        return _objectSpread({}, prevState, {\n          isLoading: false,\n          isRejected: true\n        });\n\n      case 'GET_GENRES_BOOKS_FULFILLED':\n        return _objectSpread({}, prevState, {\n          isLoading: false,\n          isFulfilled: true,\n          bookData: action.payload.data\n        });\n\n      default:\n        return prevState;\n    }\n  },\n  insertBook: (prevState = initialState, action) => {\n    switch (action.type) {\n      case 'INSERT_BOOK_PENDING':\n        return _objectSpread({}, prevState, {\n          isLoading: true,\n          isFulfilled: false,\n          isRejected: false\n        });\n\n      case 'INSERT_BOOK_REJECTED':\n        return _objectSpread({}, prevState, {\n          isLoading: false,\n          isRejected: true\n        });\n\n      case 'INSERT_BOOK_FULLFILLED':\n        return _objectSpread({}, prevState, {\n          isLoading: false,\n          isFullfilled: true,\n          bookData: action.payload.data\n        });\n\n      default:\n        return prevState;\n    }\n  },\n  updateBook: (prevState = initialState, action) => {\n    switch (action.type) {\n      case 'UPDATE_BOOK_PENDING':\n        return _objectSpread({}, prevState, {\n          isLoading: true,\n          isFulfilled: false,\n          isRejected: false\n        });\n\n      case 'UPDATE_BOOK_REJECTED':\n        return _objectSpread({}, prevState, {\n          isLoading: false,\n          isRejected: true\n        });\n\n      case 'UPDATE_BOOK_FULLFILLED':\n        return _objectSpread({}, prevState, {\n          isLoading: false,\n          isFullfilled: true,\n          bookData: action.payload.data.data\n        });\n\n      default:\n        return prevState;\n    }\n  }\n};","map":{"version":3,"sources":["/home/naandalist/Documents/arkQuick/frontEnd/src/Public/Redux/Reducers/books.jsx"],"names":["initialState","bookData","isLoading","isRejected","isFulfilled","books","getBooks","prevState","action","type","payload","data","getSelectedGenre","insertBook","isFullfilled","updateBook"],"mappings":"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","sourcesContent":["const initialState = {\n    bookData: '',\n    isLoading: false,\n    isRejected: false,\n    isFulfilled: false,\n  };\n  \n  export const books ={\n  \n    getBooks: (prevState = initialState, action) => {\n      switch (action.type) {\n        case 'GET_BOOKS_PENDING':\n          return {\n            ...prevState,\n            isFulfilled: false,\n            isRejected: false,\n            isLoading: true,\n          };\n        case 'GET_BOOKS_REJECTED':\n          return {\n            ...prevState,\n            isLoading: false,\n            isRejected: true,\n          };\n        case 'GET_BOOKS_FULFILLED':\n          return {\n            ...prevState,\n            isLoading: false,\n            isFulfilled: true,\n            bookData: action.payload.data.data,\n          };  \n        default:\n          return prevState;\n      }\n    },\n    getSelectedGenre: (prevState = initialState, action) => {\n      switch (action.type) {\n        case 'GET_GENRES_BOOKS_PENDING':\n          return {\n            ...prevState,\n            isFulfilled: false,\n            isRejected: false,\n            isLoading: true,\n          };\n        case 'GET_GENRES_BOOKS_REJECTED':\n          return {\n            ...prevState,\n            isLoading: false,\n            isRejected: true,\n          };\n        case 'GET_GENRES_BOOKS_FULFILLED':\n          return {\n            ...prevState,\n            isLoading: false,\n            isFulfilled: true,\n            bookData: action.payload.data,\n          };  \n        default:\n          return prevState;\n      }\n    },\n    insertBook: (prevState = initialState, action ) => {\n      switch (action.type) {\n        case 'INSERT_BOOK_PENDING':\n          return {\n            ...prevState,\n            isLoading: true,\n            isFulfilled: false,\n            isRejected: false,\n          };\n        case 'INSERT_BOOK_REJECTED':\n          return {\n            ...prevState,\n            isLoading: false,\n            isRejected: true,\n          };\n        case 'INSERT_BOOK_FULLFILLED':\n          return {\n            ...prevState,\n            isLoading: false,\n            isFullfilled: true,\n            bookData: action.payload.data,\n          };\n        default:\n          return prevState\n      }\n    },\n\n    updateBook: (prevState = initialState, action) => {\n      switch (action.type) {\n        case 'UPDATE_BOOK_PENDING':\n          return {\n            ...prevState,\n            isLoading: true,\n            isFulfilled: false,\n            isRejected: false,\n          };\n        case 'UPDATE_BOOK_REJECTED':\n          return {\n            ...prevState,\n            isLoading: false,\n            isRejected: true,\n          }\n        case 'UPDATE_BOOK_FULLFILLED':\n          return {\n            ...prevState,\n            isLoading: false,\n            isFullfilled: true,\n            bookData: action.payload.data.data,\n          };\n        default:\n          return prevState\n      }\n    }\n\n  }\n\n  "]},"metadata":{},"sourceType":"module"}